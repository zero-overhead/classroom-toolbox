#!/usr/bin/env raku
use v6.d;
use App::Classroom::Toolbox;
use JSON::Fast;

sub MAIN (UInt:D        :p(:$primary-size)   where * > 1                 = (%*ENV<CRTB_PRIMARY_GROUP_SIZE> || 2),   #= primary group size; > 1, 'export CRTB_PRIMARY_GROUP_SIZE=2'
          UInt:D        :s(:$secondary-size) where * > 0                 = (%*ENV<CRTB_SECONDARY_GROUP_SIZE> || 3), #= secondary group size; > 0, needed to assign all students, 'export CRTB_SECONDARY_GROUP_SIZE=3'
          IO::Path(Str) :c(:$class-file)     where *.extension('json').f = %*ENV<CRTB_CLASS_FILE>,                  #= file containing students information; --class-file=classes/demo-class-small.json or 'export CRTB_CLASS_FILE=classes/demo-class-small.json'
          IO::Path(Str) :g(:$group-folder)   where *.d                   = %*ENV<CRTB_GROUP_FOLDER>                 #= folder to store created groups as files; --group-folder=groups 'export CRTB_GROUP_FOLDER=groups'
          ) {

        my %class = from-json $class-file.extension('json').slurp;
        my @grouping        = create-grouping(%class, :$primary-size, :$secondary-size);
        my $group-file-name = save-grouping(@grouping, :$group-folder, :$class-file, :$primary-size, :$secondary-size);
        display-grouping(@grouping);
        note "\nexport CRTB_GROUP_FILE=$group-file-name.extension('json')";
}
