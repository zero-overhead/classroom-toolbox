#!/usr/bin/env raku
use v6.d;
use Test;
use lib 'lib';
use App::Classroom::Toolbox;
use JSON::Fast;

plan 6;

my @dirs-to-delete;
my $test-class = 'demo-class-small';
my $tmpdir = $*TMPDIR.add('crtb').add(10000.rand);
mkdir $tmpdir;
@dirs-to-delete.push: $tmpdir;

my @files-to-delete;
my $class-file = $*PROGRAM.parent(2).add('resources').add('classes').add($test-class);
for create-class($class-file) {
        my $fn = $tmpdir.add(.key.basename);
        @files-to-delete.push: $fn;
        spurt $fn, to-json .value
} 
my %class = from-json $tmpdir.add($test-class).extension('json').slurp;

is extract-sexs(%class).sort, ("m", "m", "m", "f").sort;
is extract-sure-names(%class).sort, ("Schuster", "Schäfer", "Schneider", "Hartmann").sort;
is extract-first-names(%class).sort, ("Leon", "Leon", "Maxi", "Niklas").sort;
is extract-unique-first-names(%class).sort, ("Leon Schu.", "Leon Schä.", "Maxi", "Niklas").sort;
is extract-emails(%class).sort, ('leon.schuster@school.de', 'leon.schäfer@school.de', 'max.schneider@school.de', 'niklas.hartmann@school.de').sort;

is (to-lists(%class).map: *.sort), (
  ("m", "m", "m", "f").sort, 
  ("Schuster", "Schäfer", "Schneider", "Hartmann").sort, 
  ("Leon", "Leon", "Maxi", "Niklas").sort,
  ("Leon Schu.", "Leon Schä.", "Maxi", "Niklas").sort,
  ('leon.schuster@school.de', 'leon.schäfer@school.de', 'max.schneider@school.de', 'niklas.hartmann@school.de').sort
);

unlink $_ for @files-to-delete;
rmdir $_ for @dirs-to-delete;

done-testing;